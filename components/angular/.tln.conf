const path = require('path');

module.exports = {
  tags: async (tln) => [],
  options: async (tln) => [
    {option: 'configuration',       env: 'TLN_ANGULAR_CONFIGURATION',       desc: 'Configuration to build',              default: null},
  ],
  dotenvs: async (tln) => [],
  inherits: async (tln) => [],
  depends: async (tln) => [],
  env: async (tln, env) => {
    env['ANGULAR_HOME'] = env['TLN_COMPONENT_HOME'];
    env['PATH'] = [`${env['TLN_COMPONENT_HOME']}${path.sep}node_modules${path.sep}.bin`, env['PATH']].join(path.delimiter);
  },
  steps: async (tln) => [
    {
      id: 'install',
      desc: '',
      builder: async (tln, script) => {
        const id = script.env["TLN_COMPONENT_ID"];
        const {name, version} = tln.unpackId(id);
        if (version) {
          script.set([
            `npm install @angular/cli@${version}`,
          ])
        }
      }
    },
    {
      id: 'build',
      desc: '',
      builder: async (tln, script) => {
        let cfg = '';
        if (script.env.TLN_ANGULAR_CONFIGURATION) {
          cfg = `--configuration=${script.env.TLN_ANGULAR_CONFIGURATION}`;
        }
        script.set([
          `ng build ${cfg}`
        ])
      }
    },
    {
      id: 'build-mobile',
      desc: '',
      builder: async (tln, script) => script.set([
        `ng build --prod --configuration=production --base-href . --output-path mobile/`
      ])
    },
    {
      id: 'lint',
      desc: '',
      builder: async (tln, script) => {
        const id = script.env["TLN_COMPONENT_ID"];
        script.set([
          `ng lint ${id} --format=prose --type-check=true`
        ])
      }
    },
    {
      id: 'test',
      desc: '',
      builder: async (tln, script) => {
        const id = script.env["TLN_COMPONENT_ID"];
        script.set([
          `ng test ${id} --code-coverage`
        ])
      }
    },
    {
      id: 'serve',
      desc: '',
      builder: async (tln, script) => script.set([
        `ng serve --host=${script.env['TLN_COMPONENT_PARAM_LSTN']} --port=${script.env['TLN_COMPONENT_PARAM_PORT']}`
      ])
    },
  ],
  components: async (tln) => require('./components.js')
}