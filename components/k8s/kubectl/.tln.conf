const path = require('path');

module.exports = {
  tags: async (tln) => [],
  dotenvs: async (tln) => [],
  env: async (tln, env) => {
    env.KUBECTL_HOME = env.TLN_COMPONENT_HOME;
    env.PATH = [env.TLN_COMPONENT_HOME, env.PATH].join(path.delimiter);
  },
  options: async (tln, args) => [],
  inherits: async (tln) => [],
  depends: async (tln) => [],
  steps: async (tln) => [
    {
      id: 'install',
      filter: 'linux',
      builder: async (tln, script) => {
        const id = script.env.TLN_COMPONENT_ID;
        const home = script.env.TLN_COMPONENT_HOME;
        const {name, version} = tln.unpackId(id);
        if (version && tln.canInstallComponent(tln, id, home)) {
          script.set([`
#curl -LO https://storage.googleapis.com/kubernetes-release/release/v${version}/bin/linux/amd64/kubectl
wget https://storage.googleapis.com/kubernetes-release/release/v${version}/bin/linux/amd64/kubectl
chmod +x ./kubectl
          `]);
        }
      }
    }

  ],
  components: async (tln) => require('./../components.js').map(v => { return { id: `kubectl-${v.id}` } })
}