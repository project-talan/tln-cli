const path = require('path');

module.exports = {
  tags: async (tln) => [],
  env: async (tln, env) => {
    env.HARDHAT_HOME = env.TLN_COMPONENT_HOME;
    env.PATH = [path.join(env.TLN_COMPONENT_HOME, 'node_modules', '.bin'), env.PATH].join(path.delimiter);
  },
  options: async (tln, args) => {
    args
      .prefix('TLN_HARDHAT')/*
      .option('app', { describe: 'Cordova application folder name', default: 'app', type: 'string' })
      .option('platform', { describe: 'Platform to work with', default: null, type: 'string' })*/;
  },
  dotenvs: async (tln) => [],
  inherits: async (tln) => [],
  depends: async (tln) => [],
  steps: async (tln) => [
    { id: 'version', builder: async (tln, script) => {
      const id = script.env.TLN_COMPONENT_ID;
      const home = script.env.TLN_COMPONENT_HOME;
      const {name, version} = tln.unpackId(id);
      if (version) {
        script.set([`
echo [hardhat] && npx hardhat --version
        `]);
      }
    }},

    { id: 'build', builder: async (tln, script) => {
      script.set([
        `npx hardhat compile`
      ]);
    }},
    {
      id: 'install',
      desc: '',
      builder: async (tln, script) => {
        const id = script.env.TLN_COMPONENT_ID;
        const home = script.env.TLN_COMPONENT_HOME;
        const {name, version} = tln.unpackId(id);
        if (version && tln.canInstallComponent(tln, id, home)) {
          script.set([
            `npm install --save-dev hardhat@${version}`,
          ])
        }
      }
    }
  ],
  components: async (tln) => require('./components.js')
}