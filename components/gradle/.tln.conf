const path = require('path');

module.exports = {
  tags: async (tln) => [],
  options: async (tln) => [],
  env: async (tln, env) => {
    env.GRADLE_HOME = env.TLN_COMPONENT_HOME;
    env.PATH = [path.join(env.TLN_COMPONENT_HOME, 'bin'), env.PATH].join(path.delimiter);
  },
  dotenvs: async (tln) => [],
  inherits: async (tln) => [],
  depends: async (tln) => [],
  steps: async (tln) => [
    {
      id: 'install',
      builder: async (tln, script) => {
        const id = script.env.TLN_COMPONENT_ID;
        const home = script.env.TLN_COMPONENT_HOME;
        const {name, version} = tln.unpackId(id);
/*
        // apply workarounds
        if (version.substring(version.length-1) === '0') {
          version = version.substring(0, version.length-2);
        }
        if (parts.length > 2) {
          const rc = parts[2];
          version = version + '-' + rc.substring(0, 2) + '-' + rc.substring(2);
        }
*/
        const param = {
            name: `gradle-${version}-bin.zip`,
            opts: { src: `gradle-${version}`, flt:`*`, dest:`.`, rmv: `gradle-${version}` },
            url: `https://services.gradle.org/distributions/gradle-${version}-bin.zip`
        };
        script.set(tln.getDownloadScript(tln, {
          linux: param,
          darwin: param,
          win32: param
        }));
      }
    }

  ],
  components: async (tln) => require('./components.js')
}