
module.exports = {
  tags: async (tln) => [],
  options: async (tln) => [],
  dotenvs: async (tln) => [],
  inherits: async (tln) => [],
  depends: async (tln) => [],
  env: async (tln, env) => {
    env['NODEJS_HOME'] = env['TLN_COMPONENT_HOME'];
    const suffix = (tln.getOsInfo().platform === 'win32')?'':`\\bin`;
    env['PATH'] = `${env['TLN_COMPONENT_HOME']}${suffix};${env['PATH']}`;
    return env;  
  },
  steps: async (tln) => [
    {
      id: 'init',
      script: async (tln, script) => {}
    },
    {
      id: 'build',
      script: async (tln, script) => {}
    },
    {
      id: 'build-prod',
      script: async (tln, script) => {}
    },
    {
      id: 'test',
      script: async (tln, script) => {}
    },
    {
      id: 'serve',
      script: async (tln, script) => {}
    },
    {
      id: 'docker-build',
      script: async (tln, script) => {}
    },
    {
      id: 'docker-run',
      script: async (tln, script) => {}
    },
    {
      id: 'install',
      script: async (tln, script) => {
        const id = script.env["TLN_COMPONENT_ID"];
        const version = id.split('-')[1];
        script.set(tln.getDownloadScript(tln, {
          linux: {
            name: `node-v${version}-linux-x64.tar.gz`,
            opts: { src: `node-v${version}-linux-x64`, flt: `*`, dest: `.`, rmv: `node-v${version}-linux-x64` },
            url: `https://nodejs.org/dist/v${version}/node-v${version}-linux-x64.tar.gz`
          },
          darwin: {
            name: `node-v${version}-darwin-x64.tar.gz`,
            opts: { src: `node-v${version}-darwin-x64`, flt: `*`, dest: '.', rmv: `node-v${version}-darwin-x64` },
            url: `https://nodejs.org/dist/v${version}/node-v${version}-darwin-x64.tar.gz`
          },
          win32: {
            name: `node-v${version}-win-x64.zip`,
            opts: { src: `node-v${version}-win-x64`, flt: `*`, dest: `.`, rmv: `node-v${version}-win-x64` },
            url: `https://nodejs.org/dist/v${version}/node-v${version}-win-x64.zip`
          }
        }));
      }
    }
  ],
  components: async (tln) => require('./components.js')
}