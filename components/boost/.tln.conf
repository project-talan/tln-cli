
module.exports = {
  tags: async (tln) => [],
  dotenvs: async (tln) => [],
  env: async (tln, env) => {
    env.BOOST_HOME = env.TLN_COMPONENT_HOME;
  },
  options: async (tln) => [],
  inherits: async (tln) => [],
  depends: async (tln) => [],
  steps: async (tln) => [
    {
      id: 'install',
      builder: async (tln, script) => {
        const id = script.env.TLN_COMPONENT_ID;
        const version = id.split('-')[1];
        const version2 = version.replace(/\./g, '_');
        script.set(tln.getDownloadScript(tln, {
          'linux': {
            name: `boost_${version2}.tar.gz`,
            opts: { src: `boost_${version2}`, flt:`*`, dest: `.`, rmv: `boost_${version2}`},
            url: `https://dl.bintray.com/boostorg/release/${version}/source/boost_${version2}.tar.gz`
          },
          'darwin': {
            name: `boost_${version2}.tar.gz`,
            opts: { src: `boost_${version2}`, flt:`*`, dest: `.`, rmv: `boost_${version2}`},
            url: `https://dl.bintray.com/boostorg/release/${version}/source/boost_${version2}.tar.gz`
          },
          'win32': {
            name: `boost_${version2}.zip`,
            opts: { src: `boost_${version2}`, flt:`*`, dest: `.`, rmv: `boost_${version2}`},
            url: `https://dl.bintray.com/boostorg/release/${version}/source/boost_${version2}.zip`
          }
        }));
      }
    }
  ],
  components: async (tln) => require('./components.js')
}